n.d(t, { Z: () => A }), n(47120);
var r = n(200651),
    s = n(192379),
    o = n(120356),
    a = n.n(o),
    i = n(10478),
    c = n(442837),
    l = n(481060),
    u = n(496929),
    d = n(906732),
    f = n(429551),
    p = n(706454),
    m = n(594174),
    g = n(580130),
    b = n(668826),
    y = n(120421),
    h = n(340078),
    x = n(324815),
    N = n(18582),
    v = n(3072),
    O = n(763283),
    j = n(944548),
    Z = n(477839),
    _ = n(622802),
    P = n(388032),
    C = n(652202),
    w = n(300090),
    E = n(965084),
    S = n(702536);
function I(e) {
    for (var t = 1; t < arguments.length; t++) {
        var n = null != arguments[t] ? arguments[t] : {},
            r = Object.keys(n);
        'function' == typeof Object.getOwnPropertySymbols &&
            (r = r.concat(
                Object.getOwnPropertySymbols(n).filter(function (e) {
                    return Object.getOwnPropertyDescriptor(n, e).enumerable;
                })
            )),
            r.forEach(function (t) {
                var r;
                (r = n[t]),
                    t in e
                        ? Object.defineProperty(e, t, {
                              value: r,
                              enumerable: !0,
                              configurable: !0,
                              writable: !0
                          })
                        : (e[t] = r);
            });
    }
    return e;
}
function k(e, t) {
    return (
        (t = null != t ? t : {}),
        Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t))
            : (function (e, t) {
                  var n = Object.keys(e);
                  if (Object.getOwnPropertySymbols) {
                      var r = Object.getOwnPropertySymbols(e);
                      n.push.apply(n, r);
                  }
                  return n;
              })(Object(t)).forEach(function (n) {
                  Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));
              }),
        e
    );
}
function M() {
    let [e, t] = (0, s.useState)(!1);
    return (0, r.jsxs)('svg', {
        className: C.mainImage,
        xmlns: 'http://www.w3.org/2000/svg',
        width: '387',
        height: '445',
        fill: 'none',
        viewBox: '0 0 387 445',
        children: [
            (0, r.jsx)('path', {
                stroke: '#458FFF',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M178.876 93.19c-7.584.124-21.712.752-29.359.752-4.382 0-11.576-.127-15.501 2.256-5.363 3.256-8.259 5.892-11.824 11.238-4.103 6.156-2.224 14.401-.961 21.099.845 4.476 2.335 9.155 3.552 13.537 1.192 4.29 1.071 9.147 2.047 13.537 2.274 10.233 4.112 22.029 4.345 32.505.359 16.169 5.374 16.996 18.342 17.156m175.267-2.017c8.069-2.075 10.441-.699 16.962-7.034 3.384-3.287 5.833-9.42 7.103-13.955 2.335-8.339 3.302-17.685 3.426-26.321.077-5.369 1.314-10.695.71-16.127-.562-5.059.166-10.839-.877-15.793-1.279-6.074-1.93-12.276-2.841-18.425-.616-4.157-1.112-8.072-5.432-9.567-5.762-1.995-12.963-2.514-19.051-2.883-8.505-.516-20.026-2.215-28.536-2.215'
            }),
            (0, r.jsx)('path', {
                stroke: '#458FFF',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M116.886 116.502c-4.557.456-8.903 2.257-13.704 2.257-3.994 0-7.332 2.121-8.857 5.849-2.3 5.623-1.705 12.366-1.504 18.383.115 3.46.17 7.74.919 11.113.665 2.995 2.469 6.054 2.8 9.025.905 8.156 3.518 17.824 12.867 18.759 3.945.395 7.915.012 11.657-.668 3.744-.681 6.32-.042 10.111-.042M352.698 117.698c4.572-.267 9.148.826 13.889.071 3.944-.629 7.575.94 9.667 4.381 3.157 5.191 3.631 11.944 4.38 17.917.431 3.436 1.051 7.67.842 11.12-.186 3.062-1.485 6.367-1.343 9.353.389 8.197-.669 18.156-9.755 20.551-3.833 1.011-7.814 1.258-11.616 1.175-3.805-.083-6.248.954-9.991 1.551'
            }),
            (0, r.jsx)('path', {
                stroke: '#90C355',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M210.348 103.59c-8.333-3.81-23.285-8.165-24.417-19.486 4.034-8.068 27.86-1.343 34.882-1.083 8.718.323 17.115 4.33 26.282 4.33 12.575 0 25.84-.2 37.349-5.954 4.905-2.452 11.764-3.645 15.697-7.577 2.916-2.917 4.072-5.03 1.624-.542-3.071 5.63-10.434 11.186-15.397 15.156-8.018 6.414-14.963 10.734-24.839 13.592-9.155 2.651-19.948 5.373-29.589 4.751-6.737-.434-15.399-.356-21.592-3.187Z'
            }),
            (0, r.jsx)('path', {
                stroke: '#90C355',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M194.592 80.856c.476-3.811 14.873-5.295 18.163-5.413 9.695-.346 19.572-2.006 29.409-1.022 10.303 1.03 18.134 6.27 27.124 10.765M188.097 81.939c-6.098 0-11.434 1.472-17.321 0'
            }),
            (0, r.jsx)('path', {
                stroke: '#458FFF',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M144.712 254.126c-5.246-3.567-9.316-7.402-12.785-12.785-4.249-6.593-10.317-11.744-15.793-17.297-4.221-4.281-13.48-12.825-10.863-19.929 2.85-7.735 15.178-3.706 19.971-.71 12.105 7.565 6.828 4.013 19.47 10.334'
            }),
            (0, r.jsxs)('g', {
                opacity: '.2',
                children: [
                    (0, r.jsxs)('mask', {
                        id: 'a',
                        width: '202',
                        height: '226',
                        x: '29',
                        y: '0',
                        maskUnits: 'userSpaceOnUse',
                        style: { maskType: 'alpha' },
                        children: [
                            (0, r.jsx)('path', {
                                stroke: '#fff',
                                strokeLinecap: 'round',
                                strokeWidth: '3',
                                d: 'M34.706 18.625c2.636 17.918 3.934 33.561 3.934 51.408v54.908c0 .193-.5 11.279.073 13.819.152.674 1.435 2.296 1.967 2.488 10.091 3.646 22.784-1.566 32.714-1.566h71.474c21.425 0 41.161-3.317 62.294-3.317 3.404 0 15.283 2.326 17.414-.368 2.603-3.293-3.643-10.688-3.643-13.728V80.812c0-8.762 12.905-75.453 1.311-75.453H75.361c-9.925 0-20.976-3.317-31.475-3.317-3.55 0-10.492-.915-10.492 5.804 0 6.143.662 11.197 5.246 14.096'
                            }),
                            (0, r.jsx)('path', {
                                stroke: '#458FFF',
                                strokeLinecap: 'round',
                                strokeWidth: '3',
                                d: 'M57.867 18.082c3.391 23.229 3.926 44.45 3.926 68.332v26.344c0 5.937-.454 7.41 4.58 7.41h12.723c9.806 0 19.057-1.647 28.79-1.647 7.234 0 16.49 1.967 23.264-1.28 4.286-2.055 8.375 1.043 12.432-2.928 6.222-6.088 18.323-3.71 26.1-4.848 8.68-1.27 17.519-.823 26.245-.823 1.164 0 2.834-.956 3.199-2.561.705-3.107 1.381-9.316 1.381-12.258 0-9.13-2.617-16.078-2.617-24.698V41.957c0-4.44-1.309-7.085-1.309-11.526 0-4.163-6.697-2.47-9.16-2.47H112.175c-15.727 0-29.932-4.94-45.147-4.94'
                            }),
                            (0, r.jsx)('path', {
                                stroke: '#fff',
                                strokeLinecap: 'round',
                                strokeWidth: '3',
                                d: 'M37.912 174.297v45.589c0 7.34 9.43 1.689 12.569 1.689 17.448 0 34.418 1.688 51.671 1.688h40.941c5.379 0 10-.32 14.186-4.69 6.152-6.424 8.967-.993 8.967-13.039 0-5.832-1.323-12.033-1.323-18.573 0-7.902-.117-14.352-6.615-14.352H66.725c-12.055 0-23.939 3.377-35.428 3.377'
                            }),
                            (0, r.jsx)('path', {
                                stroke: '#fff',
                                strokeLinecap: 'round',
                                strokeWidth: '3',
                                d: 'M47.379 191.488c34.753 0 69.269-2.098 104.183-2.098M151.562 205.472c-8.178.483-16.927 2.797-24.997 2.797-25 0-49.998.856-74.991 1.398'
                            }),
                            (0, r.jsx)('path', {
                                stroke: '#fff',
                                strokeLinecap: 'round',
                                strokeWidth: '3',
                                d: 'M55.77 185.195c2.105 9.653 4.201 20.249 8.39 28.668M78.144 189.39c0 7.037-.079 20.201 4.195 26.57M101.778 185.195c0 3.944 2.558 24.052-1.259 26.57M124.992 189.39v24.473M137.578 191.488c-.171 6.171-1.185 12.065-2.098 18.179M203.577 169.113c-9.652.472-6.904 27.658-6.904 36.468 0 5.766 2.186 10.58 5.217 14.138 2.249 2.64 14.073 2.586 15.496-1.171 2.131-5.629 6.904-8.167 6.904-14.587 0-5.15 1.74-15.722-.307-20.261-5.682-12.596-11.371-14.587-24.548-14.587'
                            }),
                            (0, r.jsx)('path', {
                                stroke: '#fff',
                                strokeLinecap: 'round',
                                strokeWidth: '3',
                                d: 'M208.898 174.707c2.833 8.153 4.195 14.071 4.195 22.374M200.507 197.082c9.64 0 18.859 2.097 28.668 2.097'
                            })
                        ]
                    }),
                    (0, r.jsx)('g', {
                        mask: 'url(#a)',
                        children: (0, r.jsx)('path', {
                            fill: '#fff',
                            fillRule: 'evenodd',
                            d: 'M78.144-26.668h155.227v84.605H78.144v97.192H6.125V-26.668h72.02ZM91.08 164.918H-57.853v70.621h180.048L91.08 200.228v-35.31Z',
                            clipRule: 'evenodd'
                        })
                    })
                ]
            }),
            (0, r.jsx)('path', {
                stroke: '#fff',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M204.12 124.775c-2.835 1.501-5 4.188-7.186 6.476-5.155 5.395-10.222 10.936-15.709 16.002-4.482 4.136-10.464 10.694-10.947 17.213-.308 4.156-.309 4.998 3.426 7.687 9.232 6.647 21.752 5.265 32.547 5.265 18.665 0 38.222.179 56.528-3.76 10.794-2.323 20.066-4.513 31.126-4.513 4.013 0 8.006.301 11.908-.752 2.57-.693 8.032-.56 10.027-2.256 1.929-1.639 1.132-7.897 1.086-9.943-.086-3.852-1.225-10.431-3.76-13.328-2.116-2.419-3.556-4.696-4.68-7.73-2.528-6.827-4.993-12.513-12.701-13.369-17.111-1.901-33.805-2.256-51.055-2.256-14.38 0-28.629 3.76-42.866 3.76'
            }),
            (0, r.jsx)('path', {
                stroke: '#fff',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M198.104 179.674c0 4.215-2.324 13.109 1.671 16.378.925.757 4.689.167 5.64.167 5.994 0 11.666-1.096 17.589-1.88 6.902-.914 13.858-2.006 20.807-2.465 7.008-.464 14.122.417 21.057-.92 8.198-1.58 22.222 4.021 26.488-4.512 2.198-4.396 3.438-5.925 1.922-10.904-.87-2.86-.218-5.796-1.169-8.649'
            }),
            (0, r.jsx)('path', {
                stroke: '#fff',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M216.153 193.963c-6.996 0-15-.009-21.809 1.504-5.175 1.15-11.137 3.411-16.378 3.76-7.78.519-18.006 2.543-23.146 8.857-9.624 11.823-10.863 29.795-10.863 44.371 0 6.483.823 12.803 2.089 19.135 1.427 7.135 1.02 12.625.919 19.804-.095 6.784-1.137 13.261-.167 20.054.643 4.501 2.249 9.01 2.423 13.537.156 4.047 1.081 9.097 2.841 12.617 3.814 7.628 12.393 7.161 18.801 11.281 4.574 2.94 12.497 2.949 17.799 3.008 14.755.164 29.721-.545 44.328-2.632 11.906-1.701 23.653-2.909 35.43-5.264 7.442-1.489 14.739-3.408 22.143-4.889 5.838-1.167 11.857-3.278 17.798-3.718 5.771-.428 11.48-.694 17.13-1.922 3.397-.739 7.782-7.116 9.025-10.153 2.545-6.221 2.928-15.069 1.587-21.474-3.835-18.324-5.331-37.175-10.57-55.275-2.264-7.82-3.388-15.71-5.181-23.648-1.247-5.524-.52-10.42-3.008-15.751-2.66-5.7-4.041-11.121-9.818-14.33-4.141-2.301-10.441-3.825-15.041-4.847-4.807-1.068-8.727 1.462-13.161 1.462M234.954 350.387c0 11.365 2.256 22.513 2.256 33.842'
            }),
            (0, r.jsx)('path', {
                stroke: '#fff',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M243.978 345.875c.133 8.777 3.76 17.29 3.76 25.945v9.985c0 1.501-.087 3.028.167 4.513.532 3.118-2.935 1.113-4.972.585-3.764-.976-6.476.21-6.476-4.178'
            }),
            (0, r.jsx)('path', {
                stroke: '#fff',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M237.961 375.956c-8.09 0-15.694.152-23.647 1.839-5.068 1.075-11.056 2.257-13.203 7.687-4.626 11.701 20.581 16.486 27.826 16.754 11.593.429 23.983.484 34.427-5.223 5.609-3.064 13.753-9.944 14.414-16.879 1.249-13.116-20.614-8.978-27.784-7.186M199.607 387.237c-4.472 4.472-9.443 8.406-14.121 12.659-2.997 2.725-6.712 4.414-9.568 7.27-4.203 4.203-6.152 9.089-3.217 14.665 4.453 8.461 11.866 1.279 11.866-5.682 0-2.854.15-5.756 0-8.607-.105-1.979-3.118-2.311-4.513-3.008M248.49 402.278c.261 7.045 1.504 14.179 1.504 21.224 0 .379.216 4.427-.752 3.217-1.568-1.96-5.82 2.468-6.392 3.802-1.504 3.509-1.486 7.339.543 10.696 1.83 3.027 6.799 2.684 8.481-.293 1.687-2.984 2.632-7.201 2.632-10.654 0-1.744-2.866-2.587-3.76-3.927M280.828 377.46c3.209 1.605 5.954 4.24 8.774 6.476 6.924 5.492 15.674 10.078 23.856 13.412 3.729 1.519 8.441 4.178 12.492 4.178'
            }),
            (0, r.jsx)('path', {
                stroke: '#fff',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M325.95 401.526c-3.951-3.512-7.674 3.078-9.024 6.016-2.715 5.909-.128 9.859 5.64 11.615 3.379 1.028 7.84-1.969 11.322-2.423 3.132-.409 4.167-.779 2.883-4.346-2.214-6.152-7.275-9.752-12.325-13.119M151.477 338.354c-9.423-7.561-19.256-14.146-19.554-27.24-.131-5.781-.519-11.971.711-17.506.676-3.045 3.621-5.206 6.434-6.768 3.831-2.129 6.115-.311 9.4 1.88'
            }),
            (0, r.jsx)('path', {
                stroke: '#fff',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M131.172 313.537c-6.693-15.617-6.016-32.592-6.016-49.259 0-1.022-7.03-3.144-8.44-4.136-2.484-1.748-4.92-3-6.016-5.849-.315-.82-1.064-3.962-1.504-4.512-4.034-5.042 2.997-1.761 5.431-.543 2.233 1.116 3.94 2.935 6.142 4.094 3.372 1.775 7.019 2.851 10.278 4.888 1.651 1.032 4.16 3.018 5.389 4.554 1.93 2.413 1.613 4.38 2.841 7.145 1.445 3.25-4.083-1.173-4.512-1.504-2.958-2.286-6.638-3.036-9.609-5.265M2.328 186.372v98.011M1.568 283.623h110.928M58.984 183.333H91.98M336.629 274.506h27.352M363.981 198.529v73.698M2.328 285.903v91.173M3.088 377.076h31.91M34.998 284.383v94.212M53.233 285.903v25.832M34.998 311.735h20.514M362.461 276.026v94.972M337.389 372.517h24.313M332.83 372.517h6.838M332.07 340.607v31.91'
            }),
            (0, r.jsx)(j.Z, {
                borderColor: 'green',
                text: (0, r.jsx)(O.Z, {
                    variant: 'text-xs/medium',
                    color: 'always-white',
                    className: C.tooltipText,
                    children: P.NW.format(_.Z.HB1We3, {
                        thanksHook: (e, t) =>
                            (0, r.jsx)(
                                N.Z,
                                {
                                    className: C.link,
                                    tag: 'a',
                                    href: 'https://neal.fun/',
                                    target: '_blank',
                                    children: e
                                },
                                t
                            )
                    })
                }),
                'aria-label': P.NW.formatToPlainString(_.Z.HB1We3, { thanksHook: (e) => e.join() }),
                shouldShow: e,
                forceOpen: e,
                disableTooltipPointerEvents: !1,
                children: (n) =>
                    (0, r.jsxs)(
                        N.Z,
                        k(I({ tag: 'g' }, n), {
                            onClick: () => t(!e),
                            onMouseDown: (e) => e.preventDefault(),
                            children: [
                                (0, r.jsx)('rect', {
                                    x: '0',
                                    y: '130',
                                    width: '65',
                                    height: '65',
                                    fill: 'transparent',
                                    stroke: 'transparent'
                                }),
                                (0, r.jsx)('path', {
                                    stroke: '#FFE100',
                                    strokeLinecap: 'round',
                                    strokeWidth: '3',
                                    d: 'M20.216 172.098c-1.894-1.003-2.163-2.493-3.009-4.586-.331-.82-.705-1.53-1.058-2.324-.225-.506-.602-1.211-.602-1.774 0-.645.015-1.757-.228-2.335-1.247-2.962 1.227-6.104 4.057-6.733 1.016-.226 2.053-.858 3.081-1.152.752-.215 1.5-.57 2.252-.695 1.666-.278 3.84-.814 5.55-.342 1.42.391 3.068.871 4.524 1.079.735.105 1.949.218 2.386.933.652 1.067 1.436 2.1 2.2 3.082.478.616.27 1.668.27 2.428 0 .683.132 1.521-.146 2.147-.172.387-.147.866-.27 1.266-.123.4-.417.666-.529 1.058-.377 1.321-2.524 2.258-3.496 3.133-1.128 1.016-2.41 2.182-3.777 2.905-.343.182 2.127.229 2.615.229.778 0 1.533.187 2.334.187 1.268 0 3.557.012 4.389-1.028.334-.417 1.225-1.091 1.68-1.359.286-.168 1.27-1.238 1.308-1.535.184-1.472 1.676-2.241 2.988-2.241.624 0 2.19.123 2.614.653.374.467.187 1.465.187 2.055 0 1.193-.648 2.265-.363 3.548.07.312.643 1.176.882 1.442.547.608 1.042 1.573 1.442 2.293 1.779 3.202 2.148 6.886 2.148 10.51 0 1.239-1.068 2.466-2.055 2.988-1.132.599-1.72 1.72-3.07 2.106-3.737 1.068-7.732 1.67-11.683 1.67h-7.242c-1.058 0-2.174.095-3.226-.01-1.408-.141-2.79-.55-4.202-.55-.947 0-1.952-.524-2.926-.56-1.002-.037-1.982-.41-2.957-.654-1.863-.465-4.204-1.059-5.073-2.894-.343-.723-.432-1.486-.8-2.148-.338-.609-.466-1.432-.466-2.148 0-.382-.231-1.981.093-2.241.724-.579 1.081-1.699 1.857-2.334 1.343-1.098 2.611-2.397 4.036-3.465.594-.446 1.24-.805 1.961-1.007.587-.164 1.416-.094 1.95-.332.86-.381 1.49-.518 2.428-.518'
                                }),
                                (0, r.jsx)('path', {
                                    stroke: '#FFE100',
                                    strokeLinecap: 'round',
                                    strokeWidth: '3',
                                    d: 'M36.09 178.634c-1.894 0-4.447-.431-6.163.332-1.658.737-4.465 1.581-4.845 3.673-.371 2.042.183 3.697 1.95 4.679 1.538.854 4.428 1.518 5.925.321.117-.094.907-.394 1.079-.415.342-.04.525-.512.933-.56.819-.096 1.77-1.021 2.615-1.12.852-.101 1.803-.886 2.614-.934.986-.058 1.922-.374 2.895-.374.586 0-1.352-.974-1.68-1.12-.974-.433-1.681-1.266-2.615-1.681-1.46-.648-2.25-2.988-4.015-2.988'
                                }),
                                (0, r.jsx)('path', {
                                    stroke: '#fff',
                                    strokeLinecap: 'round',
                                    strokeWidth: '3',
                                    d: 'M21.337 159.212v1.4c0-.653.187-1.177.187-1.774'
                                }),
                                (0, r.jsx)('path', {
                                    stroke: '#FF1818',
                                    strokeLinecap: 'round',
                                    strokeWidth: '3',
                                    d: 'M16.295 161.079c-1.647.253-2.868.235-4.379-.197-.441-.126-1.69-.666-1.971-1.017-.668-.835-.56 1.046-.56 1.401 0 .739.431 1.397.892 1.909.505.561.92 1.452 1.816 1.452.454 0 .663.374 1.12.374h1.307c.822 0-.054 1.736-.55 1.878-.15.043-.352.432-.477.55-.12.113-.513.16-.55.29-.118.416-.521.255-.757.55-.171.214-2.04 1.006-1.68 1.027.945.056 1.809.374 2.842.374 1.099 0 2.135-.374 3.227-.374.937 0 1.318-.308 1.878-1.027.827-1.064.617-3.468-.25-4.43-.384-.427-.943-1.471-.975-2.013-.052-.894-1.474-.747-2.054-.747'
                                }),
                                (0, r.jsx)('path', {
                                    stroke: '#FF4D00',
                                    strokeLinecap: 'round',
                                    strokeWidth: '3',
                                    d: 'M28.271 142.044c-1.574 1.09-3.491 1.569-5.07 2.655-1.007.693-2.038 1.259-2.928 2.125-.5.486-1.125.936-1.535 1.504a13.414 13.414 0 0 1-1.55 1.76c-.333.32-.647.615-.962.961-.24.264-.521.613-.837.799-.346.203-.586.535-.942.733-.292.162-.57.334-.872.469-.395.175-1.668.87-1.81.229-.108-.481-.075-1.019-.075-1.536 0-.553.317-1.391.698-1.81.27-.297.404-.724.667-1.016.25-.278.434-.703.628-1.008 1.338-2.101 2.55-4.326 4.04-6.358.442-.603.84-1.266 1.364-1.806.466-.479.926-.965 1.4-1.438.492-.492 1.046-.907 1.531-1.392.273-.273.603-.462.907-.698.18-.14.309-.323.523-.419.27-.119.498-.303.787-.418.2-.08.403-.16.61-.206.425-.094.847-.223 1.29-.298 1.27-.216 2.68-.289 3.962-.109 1.255.177 2.518-.115 3.714.388.164.069.352.032.523.124.276.148.525.345.803.485.472.236.957.453 1.411.717.764.444 1.536.799 2.291 1.271.675.422 1.546.965 1.85 1.745.19.489.432.968.573 1.481.055.199.085.506.085.713 0 .381.11.738.136 1.117.05.722.093 1.428.198 2.147.104.716.162 1.484.33 2.187.148.627.192 1.376.24 2.019.041.561.143 1.084.143 1.656 0 .254.021.468.066.713.044.241-.052.217-.244.252-.506.092-1.017.134-1.528.221-2.34.397-4.754.139-7.117.349-2.01.179-4.075.054-6.095.054-2.586 0-5.188-.07-7.76-.07h-2.358c-.12 0-1.09.024-1.128-.108-.04-.143-.05-.671.066-.729'
                                }),
                                (0, r.jsx)('path', {
                                    stroke: '#FFE100',
                                    strokeLinecap: 'round',
                                    strokeWidth: '3',
                                    d: 'M33.133 142.953c.688.495 1.444 2.214 2.443 1.59.158-.099.29-.434.403-.582.198-.259.405-.507.605-.764.179-.23.256-.47.387-.732M33.133 147.339c.22.288.438.45.698.682.322.288.678.557.965.88.12.136.23.299.392.388.28.153.498-.157.737-.31.264-.17.417-.413.628-.624.157-.158.628-.532.628-.737'
                                })
                            ]
                        })
                    )
            }),
            (0, r.jsx)('path', {
                stroke: '#fff',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M85.386 160.49c-10.551 0-21.289-.392-31.735-.392M38.763 130.322c0-6.78.17-13.574-.697-20.286-1.429-11.075-.819-22.296-2.394-33.323-.664-4.65-1.277-9.517-1.589-14.192-.171-2.575-.273-4.953-.718-7.51-.347-1.995-.87-4.331-.87-6.355 0-5.57-.392-11.074-.392-16.673v-5.877c0-2.23.708-4.166.783-6.355.133-3.862 1.959-7.82 1.959-11.471 0-5.06 9.35-4.39 12.45-4.506 8.642-.32 17.451 0 26.141 0 5.903 0 11.822.784 17.696.784 7.296 0 14.473.083 21.744.588 7.947.551 15.994.311 23.921 1.066 3.906.372 7.961.697 11.885.697 11.349 0 22.619 1.46 33.955 1.872 14.282.519 28.832.089 43.01-.305 11.324-.315 22.714 0 34.042 0 2.274 0 3.713 3.35 3.983 5.507.435 3.482 2.721 6.404 2.721 9.99 0 3.624.392 7.303.392 10.97 0 3.928 1.567 7.708 1.567 11.536 0 9.306 1.959 18.687 1.959 27.817'
            }),
            (0, r.jsx)('path', {
                stroke: '#fff',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M50.908 18.27c.623 10.578 1.567 21.166 1.567 31.823 0 5 .442 9.65 1.176 14.605.67 4.517.392 9.167.392 13.734 0 7.81-.392 15.503-.392 23.312 0 6.303 1.175 12.506 1.175 18.697 0 4.187 1.567 8.363 1.567 12.624 0 1.593.784 2.782.784 4.505 0 2.263 1.113 3.61 2.155 5.486 1.807 3.252 8.356 2.546 11.58 2.546 4.16 0 8.301.392 12.515.392M52.867 18.27c4.728 0 9.493.355 14.192.871 6.66.731 13.22.901 19.916 1.11 13.399.419 26.845.63 40.245.762 11.614.115 23.178.617 34.783.022 9.315-.478 18.636-1.197 27.969-1.197 10.655 0 21.122.783 31.757.783 9.271 0 18.629.392 27.839.392.949 0 2.55-.374 3.112.61.502.877.895 1.88 1.48 2.611 1.708 2.135 1.373 5.676 2.634 7.945.529.953-.137 2.182.392 3.134.733 1.32.462 3.463 1.066 4.898.949 2.253.004 5.198 1.002 7.444.799 1.8.341 4.123.892 6.05.513 1.796.762 4.318.762 6.291 0 2.298.392 4.255.392 6.465 0 .94.465 5.522 1.175 5.877'
            }),
            (0, r.jsx)('path', {
                stroke: '#fff',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M70.89 23.756c.23 1.839.893 4.099 1.197 6.072.439 2.852.39 5.801.958 8.641.565 2.83.587 6.382.587 9.273 0 2.787 1.079 5.508 1.176 8.227.087 2.438 0 4.896 0 7.335 0 2.775-.158 6.743.587 9.425.812 2.921.115 6.605.196 9.62.08 2.965.716 5.891.784 8.881.144 6.362 1.567 12.74 1.567 19.111v14.017c0 2.702 1.175 5.523 1.175 8.119 0 2.825.392 5.871.392 8.815M56.394 26.498c.319 3.592.603 7.694 1.589 11.144.416 1.458 2.8 1.002 3.896 1.002h4.897c1.044 0 .588-3.43.588-4.31 0-3.078-1.395-5.694-1.567-8.62-.074-1.246-7.637-.882-8.62-.391M57.83 47.468c.32 3.592.603 7.694 1.589 11.145.417 1.458 2.8 1 3.896 1h4.897c1.044 0 .588-3.43.588-4.309 0-3.078-1.395-5.694-1.567-8.62-.073-1.246-7.637-.882-8.62-.391M59.266 68.439c.32 3.591.603 7.693 1.59 11.144.416 1.458 2.799 1.001 3.895 1.001h4.898c1.044 0 .588-3.43.588-4.31 0-3.077-1.395-5.693-1.568-8.619-.073-1.246-7.637-.883-8.619-.392M60.703 89.41c.32 3.59.603 7.693 1.589 11.143.416 1.458 2.8 1.002 3.896 1.002h4.897c1.044 0 .588-3.43.588-4.31 0-3.078-1.395-5.694-1.567-8.62-.074-1.246-7.637-.882-8.62-.391M75.592 33.942h172.387M83.427 43.345c-2.334.146-1.567 5.559-1.567 7.248 0 1.87 5.466 1.917 6.66 1.284 1.421-.752 3.315-4.94 1.763-6.181-1.051-.841-1.725-1.624-3.134-1.937-1.171-.26-2.592-.806-3.722-.806M97.923 43.345c3.163 0 6.348-.392 9.403-.392M99.882 50.79c1.129.14 2.305.39 3.613.39 1.135 0 2.646-.629 3.135-.086 1.243 1.381 9.457-4.217 10.077-2.046.491 1.718.613 1.741 2.569 1.741H131.138c.737 0 5.422-1.018 5.551-.566.448 1.57 2.322.958 3.961.958.926 0 2.082.193 2.939-.196.396-.18 1.881-.688 2.307-.566 5.805 1.659 12.905.762 19.11.762 3.876 0 7.603.392 11.471.392 3.269 0 7.007-1.568 10.383-1.568M88.129 66.853c-1.92-.64-5.877 3.459-5.877 5.463 0 1.464.192 2.94 1.197 4.114 1.584 1.848 5.911 1.408 7.118-.566 1.68-2.751 1.39-4.222.718-7.249-.472-2.124-3.395-1.762-5.115-1.762M99.49 68.42c3.549 0 7.033.017 10.557.37 2.13.213 5.114.347 7.161-.283 1.33-.41 3.619-.44 5.007-.48 1.431-.039 2.711-.391 4.113-.391 1.193 0 5.587.188 6.073-.784M100.274 77.43c3.671 0 7.248-.783 10.97-.783 4.536 0 8.991-.392 13.517-.392 1.367 0 2.266.784 3.635.784 3.086 0 6.224.07 9.251-.588 3.84-.834 7.303-1.603 11.296-1.763.805-.032.814-.651 1.284.196.386.693.659 1.371 1.568 1.371 1.938 0 3.067-1.17 4.897-1.654 1.766-.467 2.128-.748 3.918-.109 1.994.712 5.363 1.192 7.27-.022 2.06-1.31 4.998-.957 7.422-.957 2.656 0 5.61-.392 8.423-.392M96.748 200.061c-16.374 0-32.595 1.175-48.974 1.175-2.324 0-4.548-.392-6.856-.392-1.56 0-4.23.524-5.681-.087-1.256-.528-2.771-.304-4.136-.304-1.544 0-2.717.707-4.092.783-2.54.141-2.81 2.019-4.135 3.722-.995 1.28-.566 3.322-.566 4.898 0 1.44-.392 2.754-.392 4.113v26.838c0 2.41-.526 5.549.196 7.858.496 1.587.883 3.034.98 4.679.045.776.352 2.554.783 3.309.41.716 2.382.928 3.134 1.197 2.36.843 5.08.957 7.531 1.458 5.601 1.146 11.44.176 17.065 1.176 4.077.724 8.48.304 12.624.304 5.363 0 10.743-.391 16.064-.391 3.933 0 7.9-.392 11.753-.392h4.114c1.478 0 2.65-.784 4.114-.784'
            }),
            (0, r.jsx)('path', {
                stroke: '#fff',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M28.185 210.639c0 2.275.784 3.997.784 6.269 0 2.432 1.726 1.959 3.613 1.959h3.221c.95 0 1.342-.748 2.264-.784 1.186-.045 5.006-.521 5.006-2.155 0-1.767-.392-3.311-.392-5.093 0-1.63-2.8-.979-4.114-.979h-6.464c-1.941 0-3.596.783-5.485.783M49.341 209.464c0 2.214.688 4.368 1.154 6.464.342 1.539 2.034.98 3.548.98 1.819 0 3.476.392 5.289.392 2.248 0 1.583-.637 2.764-2.155 1.202-1.546 2.476-6.073-.805-6.073-1.994 0-3.993-.046-5.986 0-1.082.025-6.297.274-6.747 1.175M70.498 209.464c0 1.519-.954 7.647 1.001 8.206 1.369.391 9.577.107 9.577-1.35 0-.742-.63-2.843-1.088-3.417-.494-.618.518-3.772-.48-3.831-2.737-.161-10.97 0-8.227 0M85.778 209.856c.45.056.784 2.585.784 3.134v1.959c0 1.052.443.545 1.175.871 1.63.724 4.03.304 5.79.304.202 0 6.42.287 4.593-1.175-1.142-.913.074-5.828-1.546-6.29-3.172-.907-6.955.413-10.404.413M28.577 227.878H41.31c1.937 0 5.488.695 7.248-.087.998-.444 2.826-.632 3.918-.697 1.224-.072 3.134-1.176 3.134.98 0 1.237.74 6.334-.087 7.161-.597.597-3.517-.047-4.136-.218-1.988-.548-4.659-.087-6.725-.087-3.049 0-5.961-.392-9.033-.392h-7.64c-1.057 0-.98-1.752-.98-2.546 0-1.554.175-2.112.784-3.33M28.577 243.158c.431 1.779.391 3.424.391 5.245 0 2.1-.406 2.982 1.763 2.982 2.26 0 2.939-1.576 2.939-3.722 0-2.093.516-3.96.392-6.072-.044-.751-5.062-.392-5.877-.392M40.33 243.55v8.227c0 1.041-.206 1.567.98 1.567H54.39c.905 0 2.002.361 2.002-.783v-3.047c0-1.708-.392-3.392-.392-5.181 0-.83-.391-1.463-.391-2.155 0-1.428-1.166-.979-2.351-.979-2.087 0-10.816-1.092-11.754.784M61.487 241.591c0 3.374.295 6.723.392 10.012.068 2.314 1.954 1.741 3.743 1.741 2.114 0 4.244.082 6.356 0 7.793-.299 16.322-.783 23.986-.783'
            }),
            (0, r.jsx)('path', {
                stroke: '#fff',
                strokeLinecap: 'round',
                strokeWidth: '3',
                d: 'M61.879 242.766c8.94-.715 17.978-.392 26.946-.392 1.638 0 2.775-.783 4.201-.783 1.707 0 3.485-.392 5.29-.392M64.23 226.311c.332 2.035-.2 8.227 2.546 8.227h3.526c2.322 0 1.763-3.261 1.763-4.897 0-1.809.195-4.114-2.046-4.114-3.139 0-6.18.784-9.316.784M76.767 226.311c.277 1.457.145 3.208.957 4.484.319.5.564 1.663.61 2.263.174 2.26 1.044 2.454 3.156 2.242 1.964-.196 4.15-.246 6.03-.783 1.56-.446.668-1.325.609-2.329-.044-.745-1.339-7.295-1.785-7.422-2.932-.838-7.476.184-10.36.761M91.655 225.135c.807 1.666 1.567 3.055 1.567 4.898 0 .516-.131 1.272.087 1.763.555 1.249.66 1.175 2.068 1.175 1.96 0 4.114.779 4.114-1.567 0-3.961.388-7.836-4.31-7.836M354.938 197.318h7.835'
            })
        ]
    });
}
let W = (e) => [
    {
        string: _.Z.JsWx19,
        value: e.playTime
    },
    {
        string: _.Z.kJVOLy,
        value: e.timesClicked
    },
    {
        string: _.Z.sm0Dw8,
        value: e.lifetimePoints
    }
];
function R() {
    let e = (0, c.e7)([p.default], () => p.default.locale),
        [t, n, s] = (0, c.Wu)([y.Z], () => [(0, f.m)((y.Z.endTime - y.Z.startTime) / 1000), (0, h.u)(y.Z.getContributionsForItem(Z.yN.CLICKER_BUTTON), e), (0, h.u)(Math.floor(y.Z.lifetimePoints), e)], [e]),
        o = W({
            playTime: t,
            timesClicked: n,
            lifetimePoints: s
        });
    return (0, r.jsxs)('div', {
        className: C.stats,
        children: [
            (0, r.jsx)(O.Z, {
                className: C.statsHeader,
                variant: 'heading-xxl/medium',
                color: 'none',
                children: P.NW.string(_.Z.Z84a2d)
            }),
            o.map((e, t) =>
                (0, r.jsx)(
                    O.Z,
                    {
                        variant: 'text-sm/medium',
                        color: 'always-white',
                        children: P.NW.format(e.string, {
                            valueHook: (t, n) =>
                                (0, r.jsx)(
                                    'span',
                                    {
                                        className: C.statValue,
                                        children: e.value
                                    },
                                    n
                                )
                        })
                    },
                    t
                )
            )
        ]
    });
}
function A(e) {
    let { className: t } = e,
        { analyticsLocations: o } = (0, d.ZP)(),
        [f, p] = (0, s.useState)(!1),
        h = (0, c.e7)([y.Z], () => y.Z.isRedeemingPrize),
        N = (0, c.e7)([m.default], () => m.default.getCurrentUser()),
        [j, W] = (0, c.Wu)([g.Z], () => [g.Z.isEntitledToSku(N, Z.VU, Z.oK), g.Z.isFetchingForApplication(Z.oK)]);
    return (
        (0, v.is)(i.Z, !1),
        (0, s.useEffect)(() => {
            (0, u.yD)(Z.oK);
        }, []),
        (0, r.jsxs)('div', {
            className: a()(t, C.winScreen),
            children: [
                (0, r.jsx)(O.Z, {
                    className: C.header,
                    variant: 'heading-lg/medium',
                    color: 'always-white',
                    children: P.NW.string(_.Z['4LK+4u'])
                }),
                (0, r.jsxs)('div', {
                    className: C.ground,
                    children: [(0, r.jsx)('div', { className: C.groundLeft }), (0, r.jsx)('div', { className: C.groundRight })]
                }),
                (0, r.jsx)(R, {}),
                (0, r.jsxs)('div', {
                    className: C.imagery,
                    children: [
                        (0, r.jsx)('img', {
                            className: C.windowImage,
                            src: S,
                            alt: ''
                        }),
                        (0, r.jsx)(M, {}),
                        (0, r.jsx)('img', {
                            className: C.windowImage,
                            src: S,
                            alt: ''
                        })
                    ]
                }),
                (0, r.jsxs)('div', {
                    className: C.footer,
                    children: [
                        (0, r.jsx)('img', {
                            className: f ? C.arrowRightActive : void 0,
                            src: E,
                            alt: ''
                        }),
                        (0, r.jsx)(x.Z, {
                            disabled: W || h,
                            color: 'green',
                            onMouseEnter: () => p(!0),
                            onMouseLeave: () => p(!1),
                            onClick: () => {
                                j
                                    ? (0, b.yW)()
                                    : (0, l.ZDy)(async () => {
                                          let { default: e } = await n.e('31981').then(n.bind(n, 196742));
                                          return (t) => (0, r.jsx)(e, k(I({}, t), { analyticsLocations: o }));
                                      });
                            },
                            children: (0, r.jsx)(O.Z, {
                                variant: 'text-md/medium',
                                color: 'currentColor',
                                children: j ? P.NW.string(_.Z['/A+1UF']) : P.NW.string(_.Z.k3KlbW)
                            })
                        }),
                        (0, r.jsx)('img', {
                            className: f ? C.arrowLeftActive : void 0,
                            src: w,
                            alt: ''
                        })
                    ]
                })
            ]
        })
    );
}
