a.r(e),
    a.d(e, {
        BrowserClient: () => U.R,
        SDK_VERSION: () => r.J,
        SEMANTIC_ATTRIBUTE_SENTRY_OP: () => n.$J,
        SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN: () => n.S3,
        SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE: () => n.TE,
        SEMANTIC_ATTRIBUTE_SENTRY_SOURCE: () => n.Zj,
        Scope: () => _.s,
        WINDOW: () => M.m9,
        addBreadcrumb: () => o.n,
        addEventProcessor: () => i.Qy,
        addIntegration: () => c.M5,
        addTracingExtensions: () => s.T,
        breadcrumbsIntegration: () => K.f,
        browserApiErrorsIntegration: () => F.t,
        browserProfilingIntegration: () => t_.x,
        browserTracingIntegration: () => tr.E8,
        captureConsoleIntegration: () => E.X,
        captureEvent: () => i.eN,
        captureException: () => i.Tb,
        captureFeedback: () => l.N,
        captureMessage: () => i.uT,
        captureSession: () => i.cg,
        captureUserFeedback: () => H.Jd,
        chromeStackLineParser: () => B.$3,
        close: () => i.xv,
        contextLinesIntegration: () => q.S,
        continueTrace: () => u.yn,
        createTransport: () => I.q,
        createUserFeedbackEnvelope: () => Y.r,
        debugIntegration: () => R.s,
        dedupeIntegration: () => d.R,
        defaultRequestInstrumentationOptions: () => ta.k3,
        defaultStackLineParsers: () => B.d8,
        defaultStackParser: () => B.Dt,
        endSession: () => i.TM,
        eventFromException: () => W.dr,
        eventFromMessage: () => W.aB,
        exceptionFromError: () => W.GJ,
        extraErrorDataIntegration: () => A.E,
        feedbackAsyncIntegration: () => Z.Q,
        feedbackIntegration: () => Q.r,
        feedbackSyncIntegration: () => Q.r,
        flush: () => i.yl,
        forceLoad: () => H.Eg,
        functionToStringIntegration: () => f.C,
        geckoStackLineParser: () => B.$Q,
        getActiveSpan: () => p.HN,
        getClient: () => N.s3,
        getCurrentHub: () => T.G,
        getCurrentScope: () => N.nZ,
        getDefaultIntegrations: () => H.nV,
        getFeedback: () => tt.qm,
        getGlobalScope: () => N.lW,
        getIsolationScope: () => N.aF,
        getReplay: () => z.T,
        getRootSpan: () => p.Gx,
        getSpanDescendants: () => p.Dp,
        getSpanStatusFromHttpCode: () => L.ix,
        globalHandlersIntegration: () => k.k,
        httpClientIntegration: () => $.l,
        httpContextIntegration: () => x.s,
        inboundFiltersIntegration: () => h.S,
        init: () => H.S1,
        instrumentOutgoingRequests: () => ta.L7,
        isInitialized: () => i.dk,
        lastEventId: () => i.eW,
        lazyLoadIntegration: () => j.R,
        linkedErrorsIntegration: () => V.O,
        makeBrowserOfflineTransport: () => tn.O1,
        makeFetchTransport: () => w.f,
        makeMultiplexedTransport: () => O.W,
        metrics: () => te.q,
        moduleMetadataIntegration: () => D.w,
        onLoad: () => H.lA,
        opera10StackLineParser: () => B.NP,
        opera11StackLineParser: () => B.HH,
        parameterize: () => g.X,
        registerSpanErrorInstrumentation: () => P.a,
        replayCanvasIntegration: () => J.m,
        replayIntegration: () => z.G,
        reportingObserverIntegration: () => X.y,
        rewriteFramesIntegration: () => m.v,
        sendFeedback: () => tt.fA,
        sessionTimingIntegration: () => y.r,
        setContext: () => i.v,
        setCurrentClient: () => v.K,
        setExtra: () => i.sU,
        setExtras: () => i.rJ,
        setHttpStatus: () => L.Q0,
        setMeasurement: () => C.o,
        setTag: () => i.YA,
        setTags: () => i.mG,
        setUser: () => i.av,
        showReportDialog: () => H.jp,
        spanToBaggageHeader: () => S.uc,
        spanToJSON: () => p.XU,
        spanToTraceHeader: () => p.Hb,
        startBrowserTracingNavigationSpan: () => tr.og,
        startBrowserTracingPageLoadSpan: () => tr.Wo,
        startInactiveSpan: () => u.qp,
        startNewTrace: () => u.Iw,
        startSession: () => i.yj,
        startSpan: () => u.GK,
        startSpanManual: () => u.V0,
        thirdPartyErrorFilterIntegration: () => G.L,
        winjsStackLineParser: () => B.R2,
        withActiveSpan: () => u._d,
        withIsolationScope: () => N.wi,
        withScope: () => N.$e,
        zodErrorsIntegration: () => b.i
    });
var r = a(452896),
    n = a(988097),
    _ = a(307854),
    o = a(572299),
    i = a(233517),
    c = a(151122),
    s = a(744478),
    E = a(116430),
    l = a(425930),
    u = a(152228),
    I = a(867921),
    R = a(522521),
    d = a(907765),
    A = a(898029),
    f = a(502990),
    p = a(696486),
    N = a(263449),
    T = a(820284),
    L = a(793373),
    h = a(636361),
    O = a(108074),
    D = a(546453),
    g = a(971304),
    P = a(859502),
    m = a(757502),
    y = a(726318),
    v = a(511906),
    C = a(241225),
    S = a(305625),
    G = a(925746),
    b = a(93198),
    M = a(163162),
    U = a(833772),
    w = a(387486),
    B = a(297117),
    W = a(878719),
    Y = a(463461),
    H = a(509068),
    K = a(408720),
    k = a(804410),
    x = a(376457),
    V = a(42367),
    F = a(515737),
    j = a(27269),
    X = a(17411),
    $ = a(453574),
    q = a(386797),
    z = a(616456),
    J = a(778600),
    Z = a(780850),
    Q = a(226483),
    tt = a(185461),
    te = a(166800),
    ta = a(799033),
    tr = a(325124),
    tn = a(281894),
    t_ = a(130260);
