(e = n.nmd(e)),
    !(function () {
        let t = this,
            n = (e) => new TextEncoder().encode(e);
        function r(e, t) {
            let r, i, a, s, o, l;
            'string' == typeof e && (e = n(e)), (r = 3 & e.length), (i = e.length - r), (a = t);
            for (l = 0; l < i; ) (o = (255 & e[l]) | ((255 & e[++l]) << 8) | ((255 & e[++l]) << 16) | ((255 & e[++l]) << 24)), ++l, (a ^= o = ((65535 & (o = ((o = ((65535 & o) * 3432918353 + ((((o >>> 16) * 3432918353) & 65535) << 16)) & 4294967295) << 15) | (o >>> 17))) * 461845907 + ((((o >>> 16) * 461845907) & 65535) << 16)) & 4294967295), (a = (65535 & (s = ((65535 & (a = (a << 13) | (a >>> 19))) * 5 + ((((a >>> 16) * 5) & 65535) << 16)) & 4294967295)) + 27492 + ((((s >>> 16) + 58964) & 65535) << 16));
            switch (((o = 0), r)) {
                case 3:
                    o ^= (255 & e[l + 2]) << 16;
                case 2:
                    o ^= (255 & e[l + 1]) << 8;
                case 1:
                    (o ^= 255 & e[l]), (a ^= o = ((65535 & (o = ((o = ((65535 & o) * 3432918353 + ((((o >>> 16) * 3432918353) & 65535) << 16)) & 4294967295) << 15) | (o >>> 17))) * 461845907 + ((((o >>> 16) * 461845907) & 65535) << 16)) & 4294967295);
            }
            return (a ^= e.length), (a ^= a >>> 16), (a = ((65535 & a) * 2246822507 + ((((a >>> 16) * 2246822507) & 65535) << 16)) & 4294967295), (a ^= a >>> 13), (a = ((65535 & a) * 3266489909 + ((((a >>> 16) * 3266489909) & 65535) << 16)) & 4294967295), (a ^= a >>> 16) >>> 0;
        }
        if (
            ((r.v2 = function (e, t) {
                'string' == typeof e && (e = n(e));
                let r = e.length,
                    i = t ^ r,
                    a = 0,
                    s;
                for (; r >= 4; ) (s = (65535 & (s = (255 & e[a]) | ((255 & e[++a]) << 8) | ((255 & e[++a]) << 16) | ((255 & e[++a]) << 24))) * 1540483477 + ((((s >>> 16) * 1540483477) & 65535) << 16)), (s ^= s >>> 24), (i = ((65535 & i) * 1540483477 + ((((i >>> 16) * 1540483477) & 65535) << 16)) ^ (s = (65535 & s) * 1540483477 + ((((s >>> 16) * 1540483477) & 65535) << 16))), (r -= 4), ++a;
                switch (r) {
                    case 3:
                        i ^= (255 & e[a + 2]) << 16;
                    case 2:
                        i ^= (255 & e[a + 1]) << 8;
                    case 1:
                        (i ^= 255 & e[a]), (i = (65535 & i) * 1540483477 + ((((i >>> 16) * 1540483477) & 65535) << 16));
                }
                return (i ^= i >>> 13), (i = (65535 & i) * 1540483477 + ((((i >>> 16) * 1540483477) & 65535) << 16)), (i ^= i >>> 15) >>> 0;
            }),
            (r.v3 = r),
            void 0 !== e)
        )
            e.exports = r;
        else {
            let e = t.murmur;
            (r.noConflict = function () {
                return (t.murmur = e), r;
            }),
                (t.murmur = r);
        }
    })();
